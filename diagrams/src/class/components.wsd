@startuml

class Component{
    +isVisible(): boolean
}
class AutoSuggestField {
    - autoSuggestHelper : AutoSuggestHelper

    + selectItem(text : String) : void
}
AutoSuggestField <|-- Component

class CGovField {

    -theField: WebElement

    +CGovField(field WebElement)
    +setFocus(): void
    +setFocusAway(): void
}
CGovField <|-- Component

class TextField {
    +TextField(field WebElement)

    +enterText(text: string): void
    +hitEnter(): void
}
TextField <|-- CGovField

class CheckBox {
    +CheckBox(field WebElement)

    +toggle(): void
    +isSelected(): boolean
}
CheckBox <|-- CGovField

class Button {
    +Button(field WebElement)

    click(): void
}
Button <|-- CGovField

class RadioButton {
    +radioButton(field WebElement)

    +select(): void
    +isSelected() : boolean
}
RadioButton <|-- CGovField

class AutoSuggestField {
    -autoSuggestHelper : AutoSuggestHelper
    +AutoSuggestField(browser WebDriver, field WebElement)
    +selectItem(text: string): void
}
AutoSuggestField <|-- TextField


class Delighter {
- delighterLink : Link
- title : WebElement
- delighter : WebElement

+isIconDisplayed() : boolean
+getLinkTitle() : String
+getLink() : Link

}
Delighter <|-- Component

class Pager{
- pagerButtons : List<Button>
- previousButton : Button
- nextButton : Button

+getNumberOfPages() : int
+getPageButton(index : int) : Button
+ getPreviousButton() : Button
+ getNextButton() : Button


}
Pager <|-- Component

@enduml

